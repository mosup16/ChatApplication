/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CHAT_CLIENT;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.*;
import javax.swing.JOptionPane;

/**
 *
 * @author بلال جلال
 */
public class Client extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form Client
     */
    PrintWriter out;
    BufferedReader in;
    Socket client;
    int port = 14450;
    String host = "localhost";
    private String msg;
    private int num;
    String byemsg = "#@124$%3";
    boolean closed = false;
    String path = "INFO.txt";
    private String username;
    private String password;
    private String nmlinedefiner = "@@USER NAME ";
    private String passLineDefiner = "@@PASSWORD ";
    String sendedMsgCode = "@#41";
    String sendedMsgSep = "#25/";
    String senderSep = "$!!$";
    private String hiMsg = "#$%#";

    public Client() {
        readUserInfo(path);
        initComponents();
        init();
        contact();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        msgtext = new javax.swing.JTextField();
        msgButton = new javax.swing.JButton();
        jClientsBox = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        msgtext.setText("jTextField1");

        msgButton.setText("send");
        msgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgButtonActionPerformed(evt);
            }
        });

        jClientsBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jClientsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(msgtext, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(msgButton)
                        .addGap(21, 21, 21))))
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jClientsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msgtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msgButton))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgButtonActionPerformed

    }//GEN-LAST:event_msgButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        close();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> jClientsBox;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTextArea jTextArea1;
    public javax.swing.JButton msgButton;
    public javax.swing.JTextField msgtext;
    // End of variables declaration//GEN-END:variables

    private void contact() {
        try {
            jClientsBox.removeAllItems();
            num = 1;
            InetAddress add = InetAddress.getByName(host);
            client = new Socket(add, port);
            in = new BufferedReader(
                    new InputStreamReader(client.getInputStream()));
            out = new PrintWriter(client.getOutputStream(), true);
            out.println(hiMsg + username);
            new clientThread(out, in, this).start();
        } catch (Exception ex) {
            System.err.println(ex + "\n" + ex.toString());
        }
    }

    private void init() {
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        msgtext.setText("");
        msgtext.addActionListener(this);
        jTextArea1.setEditable(false);
        jClientsBox.addItem(host);
        msgButton.addActionListener(this);
        username = JOptionPane.showInputDialog(null, "Insert User Name", "Sing In");
        password = JOptionPane.showInputDialog(null, "Insert Password", "Sing in");
        this.setTitle(username);
    }

    private void close() {
        try {
            out.println(byemsg + username);
            client.close();
            closed = true;
        } catch (Exception ex) {
            System.out.println(ex + "  :: \n" + ex.toString());
        }
    }

    private void readUserInfo(String path) {
        File file = null;
        BufferedReader in = null;
        PrintWriter out = null;
        try {
            file = new File(path);
            if (file != null) {
                in = new BufferedReader(
                        new InputStreamReader(
                                new FileInputStream(file)));

//                out = new PrintWriter(
//                        new FileWriter(file));
                String line;
                while ((line = in.readLine()) != null) {
                    //String line = in.readLine();
                    processInfo(line);
                }
                if (in.readLine() == null) {
//                    out.close();
//                    in.close();
                }
            } else {
                username = "Untiteled";
                password = "not defined";
            }
            System.out.println("name : " + username + " Password : " + password);
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    private void processInfo(String line) {

        if (line.trim().startsWith(nmlinedefiner)) {
            String nmline = line.substring(12);
            int i = nmline.indexOf("!@:");
            int x = nmline.indexOf("/./", i);
            System.out.println(i + " " + x);
//            username = nmline.substring(i+3, x);
        }
        if (line.trim().startsWith(passLineDefiner)) {
            String passline = line.substring(11);
            int i = passline.indexOf("!@:");
            int x = passline.indexOf("/./", i);
//            password = passline.substring(i + 3, x);
        }

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == msgButton || e.getSource() == msgtext) {
            msg = msgtext.getText();
            String cn = (String) jClientsBox.getSelectedItem();
            out.println(sendedMsgCode + cn + sendedMsgSep + username + senderSep + msg);
//            Font f = new Font("SansSerif", 15, 15);
//            jTextArea1.setForeground(Color.green);
//            jTextArea1.setFont(f);
            jTextArea1.append("to( " + cn + " ) : " + msg + "\n");
            msgtext.setText("");
        }
    }
}
